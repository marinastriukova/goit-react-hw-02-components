{"version":3,"sources":["components/Phonebook/Form/Form.module.css","components/Feedback/FeedbackOptions/Buttons.module.css","components/Phonebook/ContactsList/ContactsList.module.css","components/Feedback/Section/Section.module.css","components/Phonebook/Section/Section.module.css","components/Phonebook/Filter/Filter.module.css","components/Feedback/Notification/Notification.module.css","components/Feedback/Section/Section.jsx","components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Statistics/Statistics.jsx","components/Feedback/Notification/Notification.jsx","components/Feedback/Feedback.js","components/Phonebook/Section/Section.jsx","components/Phonebook/Form/Form.jsx","components/Phonebook/ContactsList/ContactsList.jsx","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","style","section","FeedbackOptions","options","onButtonClick","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","items","Notification","message","text","Feedback","state","notification","onLeaveFeedback","setState","countTotalFeedback","countPositiveFeedbackPercentage","this","Math","round","Component","Form","contacts","name","number","handleChange","e","target","value","handleSubmit","preventDefault","contact","id","uuidv4","find","toLowerCase","alert","props","onAddContact","reset","form","onSubmit","formLabel","formInput","onChange","required","formButton","ContactsList","onRemove","list","map","item","Filter","onChangeFilter","label","input","Phonebook","filter","addContact","prevState","changeFilter","getVisibleContacts","includes","deleteContact","visibleContacts","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cf8aef9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1xw_d\",\"formLabel\":\"Form_formLabel__eQwH-\",\"formInput\":\"Form_formInput__d3wx-\",\"formButton\":\"Form_formButton__1KZd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Buttons_button__1-nkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2blN8\",\"item\":\"ContactsList_item__1s9jf\",\"button\":\"ContactsList_button__1HTyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1YN7U\",\"title\":\"Section_title__2IhVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2jugd\",\"title\":\"Section_title__1qKZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1csY4\",\"input\":\"Filter_input__2gYqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2gxfX\"};","import style from './Section.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n    return <div className={style.section}>\r\n        <h1 className={style.title}>{title}</h1>\r\n        {children}\r\n        </div>\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Section;","import style from './Buttons.module.css';\r\n\r\nexport default function FeedbackOptions({options, onButtonClick}){\r\n    return(\r\n        <>\r\n        <button className={style.button} type={options} onClick={()=>{onButtonClick('good')}}>Good</button>\r\n        <button className={style.button} type={options} onClick={()=>{onButtonClick('neutral')}}>Neutral</button>\r\n        <button className={style.button} type={options} onClick={()=>{onButtonClick('bad')}}>Bad</button>\r\n        </>\r\n    )\r\n}\r\n","import style from './Statistics.module.css';\r\n\r\nfunction Statistics({good, neutral, bad, total, positivePercentage}){\r\n    return(\r\n        <ul>\r\n            <li className={style.items}>Good: {good}</li>\r\n            <li className={style.items}>Neutral: {neutral}</li>\r\n            <li className={style.items}>Bad: {bad}</li>\r\n            <li className={style.items}>Total: {total}</li>\r\n            <li className={style.items}>Positive feedback: {positivePercentage}%</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Statistics","import PropTypes from 'prop-types';\r\nimport style from './Notification.module.css'\r\n\r\nfunction Notification({message}) {\r\n    return <p className={style.text}>{message}</p>\r\n}\r\n\r\nNotification.propTypes ={\r\n    message: PropTypes.string\r\n}\r\n\r\nexport default Notification","import { Component } from 'react';\r\nimport Section from \"./Section/Section\";\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Notification from './Notification/Notification';\r\n\r\nexport default class Feedback extends Component {\r\n\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        }\r\n        total= 0;\r\n        positivePercentage= 0;\r\n        notification= false;\r\n\r\n\r\n    countTotalFeedback() {\r\n        this.setState(state => ({\r\n            total: state.good + state.neutral + state.bad\r\n        }))\r\n    }\r\n\r\n    countPositiveFeedbackPercentage() {\r\n        this.setState(state => ({\r\n            positivePercentage: Math.round((state.good * 100) / state.total)\r\n        }))\r\n    }\r\n\r\n    onLeaveFeedback = options => {\r\n        this.setState(state => ({\r\n            [options]: state[options] + 1,\r\n            notification: true\r\n        }))\r\n        this.countTotalFeedback()\r\n        this.countPositiveFeedbackPercentage();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Section title='Please leave feedback'>\r\n                    <FeedbackOptions\r\n                        options='button'\r\n                        onButtonClick={this.onLeaveFeedback}\r\n                    ></FeedbackOptions>\r\n                </Section>\r\n                <Section title='Statistics'>\r\n                    {this.state.notification ?\r\n                        <Statistics\r\n                            good={this.state.good}\r\n                            neutral={this.state.neutral}\r\n                            bad={this.state.bad}\r\n                            total={this.state.total}\r\n                            positivePercentage={this.state.positivePercentage}\r\n                        >\r\n                        </Statistics>\r\n                        :\r\n                        <Notification message=\"No feedback given\"></Notification>}\r\n                </Section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\nimport style from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n    return (\r\n        <div className={style.section}>\r\n            <h1 className={style.title}>{title}</h1>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Section;","import { Component } from 'react';\r\nimport style from './Form.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nexport default class Form extends Component {\r\n\r\n    state = {\r\n        contacts: [],\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const contact = [\r\n            { name: this.state.name, number: this.state.number, id: uuidv4() }\r\n        ]\r\n\r\n        if (this.state.contacts.find(({ name }) => name.toLowerCase() === this.state.name.toLowerCase())) {\r\n            alert('This contact is already in phonebook');\r\n            return\r\n        } else {\r\n            this.setState({ contacts: [...this.state.contacts, ...contact] })   \r\n        }\r\n\r\n        this.props.onAddContact(contact);\r\n\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <form className={style.form} onSubmit={this.handleSubmit}>\r\n                <label className={style.formLabel}>\r\n                    Name\r\n                    <input\r\n                        name='name'\r\n                        type=\"text\"\r\n                        className={style.formInput}\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className={style.formLabel}>\r\n                    Number\r\n                    <input\r\n                        name='number'\r\n                        type=\"text\"\r\n                        className={style.formInput}\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={style.formButton}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}","// import ContactsItems from '../ContactsItems/ContactsItems';\r\nimport style from \"./ContactsList.module.css\"\r\n\r\nfunction ContactsList({ contacts, onRemove }) {\r\n\r\n    return (<ul className={style.list}>\r\n        {contacts.map(contact => (\r\n            <li className={style.item} key={contact.id}>\r\n                <p>\r\n                    <span>{contact.name}: </span>\r\n                    <span>{contact.number}</span>\r\n                </p>\r\n                <button className={style.button} onClick={() => onRemove(contact.id)}>Delete</button>\r\n            </li>)\r\n\r\n            // <ContactsItems key={contact.id} name={contact.name} number={contact.number} \r\n            // ></ContactsItems>\r\n        )}\r\n\r\n    </ul>)\r\n}\r\n\r\nexport default ContactsList;\r\n\r\n","import style from './Filter.module.css'\r\n\r\nfunction Filter({value, onChangeFilter}) {\r\n    return(\r\n        <label className={style.label}>\r\n            Find contacts by name\r\n            <input \r\n            type=\"text\"\r\n            value={value}\r\n            onChange={e => onChangeFilter(e.target.value)}\r\n            className={style.input}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Filter","import { Component } from 'react';\r\nimport Section from './Section/Section'\r\nimport Form from './Form/Form';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\n\r\nexport default class Phonebook extends Component {\r\n\r\n    state = {\r\n        contacts: [],\r\n        filter: ''\r\n    }\r\n\r\n    addContact = (contact) => {\r\n        this.setState(prevState => {\r\n             return {\r\n                contacts: [...prevState.contacts, ...contact]\r\n            }  \r\n        })\r\n    }\r\n\r\n\r\n    changeFilter = filter => {\r\n        this.setState({ filter })\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    };\r\n\r\n    deleteContact = id => {\r\n        this.setState({ contacts: this.state.contacts.filter(contact => contact.id !== id) });\r\n    };\r\n\r\n\r\n    render() {\r\n        const visibleContacts = this.getVisibleContacts();\r\n\r\n        return (\r\n            <>\r\n                <Section title='Phonebook'>\r\n                    <Form onAddContact={this.addContact}></Form>\r\n                </Section>\r\n                <Section title='Contacts'>\r\n                    <Filter value={this.state.filter} onChangeFilter={this.changeFilter}></Filter>\r\n                    {visibleContacts.length > 0 ? <ContactsList contacts={visibleContacts} onRemove={this.deleteContact}></ContactsList> : <p>You need to add the first contact</p>\r\n                    }\r\n                </Section>\r\n            </>\r\n        )\r\n    }\r\n}","import './App.css';\nimport Feedback from './components/Feedback/Feedback';\nimport Phonebook from './components/Phonebook/Phonebook';\n\nfunction App() {\n  return (\n    <>\n      <Feedback></Feedback>\n      <Phonebook></Phonebook>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}